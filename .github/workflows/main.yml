---
name: CI
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - '*'
    paths-ignore:
      - '**.md'
env:
  TERM: dumb
  TMPDIR: "/tmp"
jobs:
  checks:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4.2.2
      - uses: bazel-contrib/setup-bazel@0.9.1
        with:
          bazelisk-cache: true
          disk-cache: ${{ github.workflow }}
          repository-cache: true
      - name: build
        run: bazel build --lockfile_mode=error //...
      - name: formatting
        run: |
          bazel run //tools:format
          if [[ $(git status --porcelain) ]]; then echo "**** run 'bazel run //tools:format' to fix formatting errors"; git diff; exit 1; fi
          bazel run @rules_rust//:rustfmt
          if [[ $(git status --porcelain) ]]; then echo "**** run 'bazel run @rules_rust//:rustfmt' to fix formatting errors"; git diff; exit 1; fi
      - name: test
        run: bazel test //...
  build_release_binaries:
    if: github.ref == 'refs/heads/main'
    needs: checks
    strategy:
      matrix:
        os: [ubuntu-24.04, macos-15]
        arch: [x64, arm64]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4.2.2
      - uses: bazel-contrib/setup-bazel@0.9.1
        with:
          bazelisk-cache: true
          disk-cache: ${{ github.workflow }}
          repository-cache: true
      - name: build
        run: bazel build //:oxc_dts_emit -o opt
      - name: store binary
        uses: actions/upload-artifact@v4.6.0
        with:
          path: bazel-bin/oxc_dts_emit
  download_artifacts:
    needs: build_release_binaries
    runs-on: ubuntu-24.04
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4.1.8
        with:
          path: ./artifacts
      - name: the files
        run: ls -al artifacts/
